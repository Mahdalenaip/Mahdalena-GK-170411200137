//no2
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glPointSize(4);


    glBegin(GL_POLYGON);
    glColor3f(0.0,0.0,0.0);
    glVertex2f (-1.0, 1.0);
    glVertex2f (0.0, 1.0);
    glVertex2f (0.0, 0.0);
    glVertex2f (-1.0, 0.0);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(0.0,0.0,0.0);
    glVertex2f (0.0, 0.0);
    glVertex2f (1.0, 0.0);
    glVertex2f (1.0, -1.0);
    glVertex2f (0.0, -1.0);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(0.0,0.0,1.0);
    glVertex2f (0.0, 1.0);
    glVertex2f (1.0, 1.0);
    glVertex2f (1.0, 0.0);
    glVertex2f (0.0, 0.0);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(0.0,0.0,1.0);
    glVertex2f (-1.0, 0.0);
    glVertex2f (0.0, 0.0);
    glVertex2f (0.0, -1.0);
    glVertex2f (-1.0, -1.0);
    glEnd();

    glFlush();
}

void myinit(){
     glMatrixMode(GL_PROJECTION);
     glLoadIdentity();
     gluOrtho2D(-2.0,2.0,-2.0,2.0);
     glMatrixMode(GL_MODELVIEW);
     glClearColor(1.0,1.0,1.0,1.0);
     glColor3f (1.0, 0.0, 0.0);
 }

int main(int argc, char* argv[]){
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500,500);
    glutCreateWindow("Checker Board A");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}

//no3
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glPointSize(4);


 //huruf i
     //1
     glBegin(GL_POLYGON);
                         glColor3f(0.0,1.0,0.0);
                         glVertex2f(0.1,-0.4);
                         glVertex2f(0.1,0.7);
                         glVertex2f(-0.2,0.7);
                         glVertex2f(-0.2,-0.4);
     glEnd();
     //2
     glBegin(GL_POLYGON);
                        glColor3f(0.0,1.0,0.0);
                         glVertex2f(0.1,0.8);
                         glVertex2f(0.1,0.9);
                         glVertex2f(-0.2,0.9);
                         glVertex2f(-0.2,0.8);

     glEnd();


    glFlush();
}

void myinit(){
     glMatrixMode(GL_PROJECTION);
     glLoadIdentity();
     gluOrtho2D(-1.0,1.0,-1.0,1.0);
     glMatrixMode(GL_MODELVIEW);
     glClearColor(0.0,0.0,0.0,0.0);
     glColor3f (1.0, 1.0, 1.0);
 }

int main(int argc, char* argv[]){
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(300,400);
    glutCreateWindow("Polygon A");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}

//no 4a
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glPointSize(4);

    glColor3f(0.0,0.0,0.0);
    glRectd(-1.0, 0.0, 0.0, 1.0);
    glRectd(0.0, -1.0, 1.0, 0.0);

    glColor3f(0.0,0.0,1.0);
    glRectd(-1.0, -1.0, 0.0, 0.0);
    glRectd(0.0, 0.0, 1.0, 1.0);


    glFlush();
}

void myinit(){
     glMatrixMode(GL_PROJECTION);
     glLoadIdentity();
     gluOrtho2D(-2.0,2.0,-2.0,2.0);
     glMatrixMode(GL_MODELVIEW);
     glClearColor(1.0,1.0,1.0,1.0);
     glColor3f (1.0, 0.0, 0.0);
 }

int main(int argc, char* argv[]){
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500,500);
    glutCreateWindow("Checker Board B");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}

//no4b
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glPointSize(4);

    glColor3f(0.0,1.0,0.0);
    glRectd(0.1,-0.4,-0.2,0.7);
    glColor3f(0.0,1.0,0.0);
    glRectd(0.1,0.8,-0.2,0.9);



    glFlush();
}

void myinit(){
     glMatrixMode(GL_PROJECTION);
     glLoadIdentity();
     gluOrtho2D(-1.0,1.0,-1.0,1.0);
     glMatrixMode(GL_MODELVIEW);
     glClearColor(0.0,0.0,0.0,0.0);
     glColor3f (1.0, 1.0, 1.0);
 }

int main(int argc, char* argv[]){
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(300,400);
    glutCreateWindow("Polygon B");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}

