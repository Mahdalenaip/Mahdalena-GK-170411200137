NO1
#include<windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0,0.0,1.5);
    glRotated(45, 0, 0, 1.0);
    //KOTAK baris ke-1 dari bawah
    glPushMatrix();
    glTranslated(10.0, 0.0, 0);
    glRecti(0,0, 10, 10);
    glTranslated(20.0, 0.0, 0);
    glRecti(0,0, 10, 10);
    glTranslated(20.0, 0.0, 0);
    glRecti(0,0, 10, 10);
    glTranslated(20.0, 0.0, 0);
    glRecti(0,0, 10, 10);
    for (int x=1.0; x<=8.0; x++){
            if (x%2==1) {
                //KOTAK baris genap dari ke-1
                glTranslated(-70.0, 10.0, 0);
                glRecti(0,0, 10, 10);
                glTranslated(20.0, 0.0, 0);
                glRecti(0,0, 10, 10);
                glTranslated(20.0, 0.0, 0);
                glRecti(0,0, 10, 10);
                glTranslated(20.0, 0.0, 0);
                glRecti(0,0, 10, 10);
                } else {
                    //KOTAK baris ganjil dari ke-1
                    glTranslated(-50.0, 10.0, 0);
                    glRecti(0,0, 10, 10);
                    glTranslated(20.0, 0.0, 0.0);
                    glRecti(0,0, 10, 10);
                    glTranslated(20.0, 0.0, 0.0);
                    glRecti(0,0, 10, 10);
                    glTranslated(20.0, 0.0, 0.0);
                    glRecti(0,0, 10, 10);
                    }
                    glPopMatrix();
            }
            glFlush();
}
void myinit()
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-70.5,-28.5,-14.0,42.5);
    glMatrixMode(GL_MODELVIEW);
    glClearColor(1.0,1.0,1.0,1.0);
    glColor3f(1.0,1.0,1.0);
}
int main(int argc, char* argv[])
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400,400);
    glutInitWindowPosition(100,100);
    glutCreateWindow("CHECKER BOARD TRANSFORMASI");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}
NO2
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>
#include <math.h>

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    // lingkaran
    glBegin(GL_LINE_STRIP);
    for(float a=0; a<=6.28; a+=0.01)
    {
        glVertex2f(25*cos(a),25*sin(a));
    }
    glEnd();

    // kotak
    glColor3f(0.0,0.0,1.0);
    glPushMatrix();
    for(int i=0; i<12; i++)
    {
        glRotated(30,0,0,1);
        glRecti(-3,21,3,27);
    }
    glPopMatrix();
    glFlush();
}

void myinit()
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-30.0,30.0,-30.0,30.0);
    glMatrixMode(GL_MODELVIEW);
    glClearColor(0.0,0.0,0.0,0.0);
    glColor3f(1.0,1.0,0.0);
}

int main(int argc, char* argv[])
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400,400);
    glutInitWindowPosition(100,100);
    glutCreateWindow("Modul 5 Nomor 2");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}
NO3
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>
#include <math.h>

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    // lingkaran
    glBegin(GL_LINE_STRIP);
    for(float a=0; a<=6.28; a+=0.01)
    {
        glVertex2f(25*cos(a),25*sin(a));
    }
    glEnd();

    // kotak
    glColor3f(0.0,0.0,1.0);
    for(int i=0; i<12; i++)
    {
        glRotated(90, 0, 0, 1.0);

        if(i%2==1)
        {
            glRecti(-3,21,3,27);
            glPushMatrix();
            glTranslated(21, -12, 0);
            glRecti(-3,21,3,27);
            glPopMatrix();

            glPushMatrix();
            glTranslated(21, 12, 0);
            glRecti(-3,-27,3,-21);
            glPopMatrix();
        }
        else
        {
            glRecti(3,21,-3,27);

            glPushMatrix();
            glTranslated(-21, -12, 0);
            glRecti(3,21,-3,27);
            glPopMatrix();

            glPushMatrix();
            glTranslated(-21, 12, 0);
            glRecti(-3,-21,3,-27);
            glPopMatrix();
        }
    }
    glFlush();
}

void myinit()
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-30.0,30.0,-30.0,30.0);
    glMatrixMode(GL_MODELVIEW);
    glClearColor(0.0,0.0,0.0,0.0);
    glColor3f(1.0,1.0,0.0);
}

int main(int argc, char* argv[])
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400,400);
    glutInitWindowPosition(100,100);
    glutCreateWindow("Modul 5 Nomor 3");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}
NO4
#include <Windows.h>
#include <GL/glut.h>
#include <stdlib.h>
#include <Math.h>
void kotak(){
    glColor3f(0.0, 0.0, 1.0);
    //glScaled(10,10,0);
    glBegin(GL_POLYGON);
    glVertex2f(-5,45);
    glVertex2f(-5,35);
    glVertex2f(5,35);
    glVertex2f(5,45);
    glEnd();
}
void display()
{
    glColor3f(1.0, 1.0, 0.0);

    glBegin(GL_LINE_STRIP);
    for (float a=0; a<=6.28; a+=0.001)
    {
        glVertex2f(40*cos(a),40*sin(a));
    }
    glEnd();
    glColor3f(0.0, 0.0, 1.0);

    for(int x=0; x<12; x++){
        glRotated(-30,0,0,1);

        if(x % 2 == 0){
            glPushMatrix();
            glTranslated(2.5,20,0);
            glScaled(0.5, 0.5, 0);
            kotak();
            glPopMatrix();
        }
        else{
             kotak();
        }
    }
    glFlush();
}
void myinit()

{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
     gluOrtho2D(-50, 50, -50, 50);
    glMatrixMode(GL_MODELVIEW);
    glClearColor(0.0,0.0,0.0,0.0);
    glColor3f (1.0, 1.0, 0.0);
}
int main(int argc, char* argv[])
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400,400);
    glutInitWindowPosition(100,100);
    glutCreateWindow("Modul 5 Nomor 4");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}
NO5
#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>
#include <math.h>

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    // lingkaran
    glBegin(GL_LINE_STRIP);
    for(float a=0; a<=6.28; a+=0.01)
    {
        glVertex2f(25*cos(a),25*sin(a));
    }
    glEnd();

    // kotak
    for(int i=0; i<12; i++)
    {
        glColor3f(0.0,0.0,1.0);
        glRotated(90,0,0,1);

        glPushMatrix();
        if(i%2 == 0)
        {
            glPushMatrix();
            glTranslated(0.75,7.5,0);
            glScalef(0.75,0.75,0.0);
            glRecti(-3,21,3,27);
            glPopMatrix();

            glPushMatrix();
            glTranslated(21.5,-14,0);
            glTranslated(0.75,7.5,0);
            glScalef(0.75,0.75,0.0);
            glRecti(-3,21,3,27);
            glPopMatrix();

            glPushMatrix();
            glTranslated(21.5,14,0);
            glTranslated(-0.75,-7.5,0);
            glScalef(0.75,0.75,0.0);
            glRecti(-3,-27,3,-21);
            glPopMatrix();
        }
        else
        {
            glRecti(-3,21,3,27);
            //glScalef(2,2,0.0);

            glPushMatrix();
            glTranslated(21,-12,0);
            glRecti(-3,21,3,27);
            glPopMatrix();

            glPushMatrix();
            glTranslated(21,12,0);
            glRecti(-3,-27,3,-21);
            glPopMatrix();
        }
        glPopMatrix();
    }
    glFlush();
}
void myinit()
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-30.0,30.0,-30.0,30.0);
    glMatrixMode(GL_MODELVIEW);
    glClearColor(0.0,0.0,0.0,0.0);
    glColor3f(1.0,1.0,0.0);
}

int main(int argc, char* argv[])
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400,400);
    glutInitWindowPosition(100,100);
    glutCreateWindow("Modul 5 Nomor 5");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}
